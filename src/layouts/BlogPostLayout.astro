---
import BaseLayout from './BaseLayout.astro';

export interface Props {
  title: string;
  description: string;
  date: string;
  tags: string[];
}

const { title, description, date, tags } = Astro.props;

// Format the date
const formattedDate = new Date(date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Calculate reading time (rough estimate: 200 words per minute)
const content = await Astro.slots.render('default');
const wordCount = content.split(/\s+/).length;
const readingTime = Math.ceil(wordCount / 200);
---

<BaseLayout title={title} description={description}>
  <article class="blog-post">
    <header class="post-header">
      <a href="/" class="back-link">← Back to Home</a>
      
      <h1>{title}</h1>
      <p class="description">{description}</p>
      
      <div class="post-meta">
        <time datetime={date}>{formattedDate}</time>
        <span class="separator">•</span>
        <span>{readingTime} min read</span>
      </div>
      
      {tags.length > 0 && (
        <div class="tags">
          {tags.map(tag => (
            <span class="tag">{tag}</span>
          ))}
        </div>
      )}
    </header>
    
    <article class="prose prose-lg dark:prose-invert post-content -mt-20">
      <slot />
    </article>
    
    <footer class="post-footer">
      <div class="share-section">
        <h3>Enjoyed this post?</h3>
        <p>Share it with your friends!</p>
      </div>
      
      <a href="/" class="back-link">← Back to all posts</a>
    </footer>
  </article>
</BaseLayout>

<style>
  .blog-post {
    max-width: 700px;
    margin: 0 auto;
  }
  
  .back-link {
    display: inline-block;
    color: var(--accent-color);
    text-decoration: none;
    margin-bottom: 2rem;
    font-weight: 500;
    transition: transform 0.2s;
  }
  
  .back-link:hover {
    transform: translateX(-4px);
  }
  
  .post-header h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    line-height: 1.2;
  }
  
  .description {
    font-size: 1.25rem;
    color: var(--secondary-text);
    margin-bottom: 1.5rem;
  }
  
  .post-meta {
    display: flex;
    gap: 0.75rem;
    align-items: center;
    color: var(--secondary-text);
    font-size: 0.95rem;
    margin-bottom: 1rem;
  }
  
  .separator {
    color: var(--border-color);
  }
  
  .tags {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }
  
  .tag {
    background-color: var(--accent-color);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
  }
  
  .post-content {
    line-height: 1.8;
    font-size: 1.1rem;
  }
  
  /* Style markdown content */
  .post-content :global(h2) {
    font-size: 1.75rem;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    color: var(--text-color);
  }
  
  .post-content :global(h3) {
    font-size: 1.5rem;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
    color: var(--text-color);
  }
  
  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }
  
  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 2rem;
  }
  
  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }
  
  .post-content :global(blockquote) {
    border-left: 4px solid var(--accent-color);
    padding-left: 1.5rem;
    margin: 2rem 0;
    color: var(--secondary-text);
    font-style: italic;
  }
  
  .post-content :global(img) {
    max-width: 100%;
    border-radius: 8px;
    margin: 2rem 0;
  }
  
  .post-content :global(a) {
    color: var(--accent-color);
    text-decoration: underline;
  }
  
  .post-footer {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-color);
  }
  
  .share-section {
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .share-section h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
  }
  
  .share-section p {
    color: var(--secondary-text);
  }
  
  @media (max-width: 768px) {
    .post-header h1 {
      font-size: 2rem;
    }
    
    .post-content {
      font-size: 1rem;
    }
  }
</style>